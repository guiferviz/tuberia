[tool.poetry]
name = "tuberia"
version = "0.0.1"
description = "Tuberia... when data engineering meets software engineering"
authors = [
  "guiferviz <guiferviz@gmail.com>"
]
packages = [
    { include = "tuberia", from = "src" },
    { include = "pytest_tuberia", from = "src" },
]
readme = "README.md"
repository = "https://github.com/aidictive/tuberia"
documentation = "https://aidictive.com/tuberia"
keywords = [
  "pipeline",
  "data",
  "engineering",
  "databricks",
  "spark",
  "pyspark",
  "tables"
]
classifiers = [
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.scripts]
tuberia = "tuberia.__main__:main"

[tool.poetry.plugins.pytest11]
pytest_tuberia = "pytest_tuberia"

[tool.poetry.dependencies]
python = "^3.8"
typer = "^0.4.0"
loguru = "^0.6.0"
pydantic = "^1.9.0"
prefect = "^1.2.0"
pyspark = { version = "3.3.0", optional = true }
# Notice that delta-spark version must be in sync with pyspark:
# https://docs.delta.io/latest/releases.html#compatibility-with-apache-spark
delta-spark = { version = "2.1.0", optional = true }
makefun = "^1.14.0"
inflection = "^0.5.1"

[tool.poetry.extras]
pyspark = ["pyspark", "delta-spark"]

[tool.poetry.group.dev.dependencies]
# Testing.
pytest = "^7.1.2"
pytest-mock = "^3.6.1"
pytest-cov = "^3.0.0"
# Debugging.
pdbpp = "^0.10.3"
# Static analyzers / formatters.
flake8 = "^5.0.4"
Flake8-pyproject = "^1.1.0.post0"
pyright = "^0.0.13"
black = "^22.1.0"
isort = "^5.10.1"
pre-commit = "^2.18.1"
# Docs.
mkdocs-material = "^8.2.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 80
extend_skip_glob = ["examples/*"]

[tool.black]
line-length = 80

[tool.pyright]
include = ["src"]

[tool.flake8]
per-file-ignores = [
    # Imported but unused.
    "__init__.py:F401",
]
exclude = [
    ".git",
    "__pycache__",
]
extend-ignore = [
    # Indentation — black handles
    "E1",
    "W1",
    # Whitespace — black handles
    "E2",
    "W2",
    # Blank lines — black handles
    "E3",
    "W3",
    # Imports — isort handles
    "E4",
    "W4",
    # Line length — black handles
    "E5",
    "W5",
]
max-line-length = 100
# Print the total number of errors.
count = true
# Print the source code generating the error/warning in question.
show-source = true
# Count the number of occurrences of each error/warning code and print a report.
statistics = true
